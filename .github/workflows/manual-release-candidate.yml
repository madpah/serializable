# encoding: utf-8

# This file is part of py-serializable
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# Copyright (c) Paul Horton. All Rights Reserved.

name: Manual Pre Release Publish

on:
  workflow_dispatch:

concurrency:
  group: release
  cancel-in-progress: true

env:
  REPORTS_DIR: CI_reports
  DIST_DIR: dist
  DIST_ARTIFACT: python-dist
  PYTHON_SEMANTIC_RELEASE_VERSION: "7.34.6"
  PYTHON_VERSION_DEFAULT: "3.11"
  POETRY_VERSION: "1.4.1"

jobs:
  release_candidate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python Environment
        # see https://github.com/actions/setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION_DEFAULT }}
          architecture: 'x64'

      - name: Install poetry
        # see https://github.com/marketplace/actions/setup-poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Install dependencies
        run: poetry install --no-root

      - name: View poetry version
        run: poetry --version

      - name: Install semantic-release
        run: pip install python-semantic-release==${{ env.PYTHON_SEMANTIC_RELEASE_VERSION }}

      - name: Perform Release ðŸ“¦
        run: semantic-release publish --prerelease
        env:
          GH_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
          REPOSITORY_USERNAME: __token__
          REPOSITORY_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: Artifact python dist
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DIST_ARTIFACT }}
          path: ${{ env.DIST_DIR }}/
          if-no-files-found: error
